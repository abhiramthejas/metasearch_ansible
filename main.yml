---
- name: "AWS inventory create"
  hosts: localhost
  tasks:

    - name: "Collect ec2 instance"
      amazon.aws.ec2_instance_info:
        region: ap-south-1
        filters: 
          "tag:Project": dynamic
          instance-state-name: [ "running"]
      register: ec2

    - name: "dynamic inventory IP"
      debug:
       msg: "instance ID : {{item.public_ip_address}}"
      with_items: "{{ec2.instances}}" 

    - name: "Add hosts to inventory"
      add_host:
        name: "{{item.public_ip_address}}"
        ansible_ssh_host: "{{item.public_ip_address}}"
        ansible_ssh_port: 22
        ansible_ssh_private_key_file: "local_key"
        groups: 
          - instances
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items: "{{ec2.instances}}"

- name: "Instance configuration"
  become: true
  hosts: localhost
  vars_files:
    - vars.yml
  tasks:

    - name: "Service Install"
      yum:
        name: "{{service_install}}"
        state: present


    - name: "Service start"
      service:
        name: "{{item}}"
        state: started
        enabled: true
      with_items: "{{service_list}}"


    - name: "Clone files from git"
      git:
        repo: "https://github.com/abhiramthejas/searxngfile.git"
        dest: /home/searxng/
        force: true

    - name: "Secret key generate"
      shell:
        cmd: sed -i "s|ultrasecretkey|$(openssl rand -hex 32)|g" /home/searxng/searxng/settings.yml


    - name: "docker python module install"
      pip:
        name: docker
        state: present


    - name: "Docker volume create"
      community.docker.docker_volume:
        name: "{{ item }}"
        state: present
      with_items: "{{docker_volume}}"
 
    - name: "Docker network create"
      community.docker.docker_network:
        name: "{{ item }}"
        state: present
        ipam_driver: default
      with_items: "{{docker_network}}"
    
    - name: "Searxng container create"
      community.docker.docker_container:
        name: searxng
        image: searxng/searxng:latest
        networks:
          - name: searxng
        ports:
          - "127.0.0.1:8080:8080"
        volumes:
          - /home/searxng/searxng:/etc/searxng:rw
        env:
          SEARXNG_BASE_URL: https://"{{host}}"
        cap_drop:
          - all
        capabilities: "{{cap_add_searxng}}"
        log_driver: json-file
        log_options:
           max-size: "1m"
           max-file: "1"
    
    - name: "redis container create"
      community.docker.docker_container:
        name: redis
        image: redis:alpine
        command: redis-server --save "" --appendonly "no"
        networks:
          - name: searxng
        tmpfs: /var/lib/redis
        cap_drop:
          - all
        capabilities: "{{cap_add_redis}}"

    - name: "Caddy container create"
      community.docker.docker_container:
        name: caddy
        image: caddy:2-alpine
        network_mode: host
        volumes: 
           - /home/searxng/Caddyfile:/etc/caddy/Caddyfile:ro
           - caddy-data:/data:rw
           - caddy-config:/config:rw
        env:
            SEARXNG_HOSTNAME: "{{host}}"
            SEARXNG_TLS: "{{email}}"
        cap_drop:
           - all
        capabilities: "{{cap_add_caddy}}"